X = as.matrix(data[,2:9])
params = dim(X)[2]
mu = matrix(0,params,1)
Sigma = tau^2*diag(params)
LogPostLogistic = function(betas, y, X, mu, Sigma) {
params = length(betas)
linPred = X%*%betas
logLik = sum(linPred*y -log(1+exp(linPred)))
if (abs(logLik) == Inf) logLik = -20001
logPrior = dmvnorm(betas, mu, Sigma, log=TRUE)
return(logLik + logPrior)
}
initVal = c(rep(0,dim(X)[2]))
OptimResults = optim(initVal,LogPostLogistic,gr=NULL,y,X,mu,Sigma,method=c("BFGS"),control=list(fnscale=-1),hessian=TRUE)
beta.tilde = OptimResults$par
inv.hessian = -solve(OptimResults$hessian)
numerical.beta = rmvnorm(10000,beta.tilde,inv.hessian) #Ser ut som skit
hist(numerical.beta)
data = read.delim("/home/krisi211/Desktop/TDDE07/Lab2/WomenWork.dat",sep="")
#data = read.delim("/home/ponsv690/Documents/TDDE07/Lab2/WomenWork.dat",sep="")
## a
glm.model = glm(Work~0 +., data = data, family = binomial)
## b
tau = 10
library("mvtnorm")
y = as.vector(data[,1])
X = as.matrix(data[,2:9])
params = dim(X)[2]
mu = matrix(0,params,1)
Sigma = tau^2*diag(params)
LogPostLogistic = function(betas, y, X, mu, Sigma) {
params = length(betas)
linPred = X%*%betas
logLik = sum(linPred*y -log(1+exp(linPred)))
if (abs(logLik) == Inf) logLik = -20001
logPrior = dmvnorm(betas, mu, Sigma, log=TRUE)
return(logLik + logPrior)
}
initVal = c(rep(0,dim(X)[2]))
OptimResults = optim(initVal,LogPostLogistic,gr=NULL,y,X,mu,Sigma,method=c("BFGS"),control=list(fnscale=-1),hessian=TRUE)
beta.tilde = OptimResults$par
inv.hessian = -solve(OptimResults$hessian)
numerical.beta = rmvnorm(10000,beta.tilde,inv.hessian) #Ser ut som skit
hist(numerical.beta)
data = read.delim("/home/krisi211/Desktop/TDDE07/Lab2/WomenWork.dat",sep="")
#data = read.delim("/home/ponsv690/Documents/TDDE07/Lab2/WomenWork.dat",sep="")
## a
glm.model = glm(Work~0 +., data = data, family = binomial)
## b
tau = 10
library("mvtnorm")
y = as.vector(data[,1])
X = as.matrix(data[,2:9])
params = dim(X)[2]
mu = matrix(0,params,1)
Sigma = tau^2*diag(params)
LogPostLogistic = function(betas, y, X, mu, Sigma) {
params = length(betas)
linPred = X%*%betas
logLik = sum(linPred*y -log(1+exp(linPred)))
if (abs(logLik) == Inf) logLik = -20001
logPrior = dmvnorm(betas, mu, Sigma, log=TRUE)
return(logLik + logPrior)
}
initVal = c(rep(0,dim(X)[2]))
OptimResults = optim(initVal,LogPostLogistic,gr=NULL,y,X,mu,Sigma,method=c("BFGS"),control=list(fnscale=-1),hessian=TRUE)
beta.tilde = OptimResults$par
inv.hessian = -solve(OptimResults$hessian)
numerical.beta = rmvnorm(10000,beta.tilde,inv.hessian) #Ser ut som skit
hist(numerical.beta)
data = read.delim("/home/krisi211/Desktop/TDDE07/Lab2/WomenWork.dat",sep="")
#data = read.delim("/home/ponsv690/Documents/TDDE07/Lab2/WomenWork.dat",sep="")
set.seed(235)
## a
glm.model = glm(Work~0 +., data = data, family = binomial)
## b
tau = 10
library("mvtnorm")
y = as.vector(data[,1])
X = as.matrix(data[,2:9])
params = dim(X)[2]
mu = matrix(0,params,1)
Sigma = tau^2*diag(params)
LogPostLogistic = function(betas, y, X, mu, Sigma) {
params = length(betas)
linPred = X%*%betas
logLik = sum(linPred*y -log(1+exp(linPred)))
if (abs(logLik) == Inf) logLik = -20001
logPrior = dmvnorm(betas, mu, Sigma, log=TRUE)
return(logLik + logPrior)
}
initVal = c(rep(0,dim(X)[2]))
OptimResults = optim(initVal,LogPostLogistic,gr=NULL,y,X,mu,Sigma,method=c("BFGS"),control=list(fnscale=-1),hessian=TRUE)
beta.tilde = OptimResults$par
inv.hessian = -solve(OptimResults$hessian)
numerical.beta = rmvnorm(10000,beta.tilde,inv.hessian) #Ser ut som skit
hist(numerical.beta)
data = read.delim("/home/krisi211/Desktop/TDDE07/Lab2/WomenWork.dat",sep="")
#data = read.delim("/home/ponsv690/Documents/TDDE07/Lab2/WomenWork.dat",sep="")
set.seed(235)
## a
glm.model = glm(Work~0 +., data = data, family = binomial)
## b
tau = 10
library("mvtnorm")
y = as.vector(data[,1])
X = as.matrix(data[,2:9])
params = dim(X)[2]
mu = matrix(0,params,1)
Sigma = tau^2*diag(params)
LogPostLogistic = function(betas, y, X, mu, Sigma) {
params = length(betas)
linPred = X%*%betas
logLik = sum(linPred*y -log(1+exp(linPred)))
if (abs(logLik) == Inf) logLik = -20001
logPrior = dmvnorm(betas, mu, Sigma, log=TRUE)
return(logLik + logPrior)
}
initVal = c(rep(0,dim(X)[2]))
OptimResults = optim(initVal,LogPostLogistic,gr=NULL,y,X,mu,Sigma,method=c("BFGS"),control=list(fnscale=-1),hessian=TRUE)
beta.tilde = OptimResults$par
inv.hessian = -solve(OptimResults$hessian)
numerical.beta = rmvnorm(10000,beta.tilde,inv.hessian) #Ser ut som skit
hist(numerical.beta)
data = read.delim("/home/krisi211/Desktop/TDDE07/Lab2/WomenWork.dat",sep="")
#data = read.delim("/home/ponsv690/Documents/TDDE07/Lab2/WomenWork.dat",sep="")
set.seed(235)
## a
glm.model = glm(Work~0 +., data = data, family = binomial)
## b
tau = 10
library("mvtnorm")
y = as.vector(data[,1])
X = as.matrix(data[,2:9])
params = dim(X)[2]
mu = matrix(0,params,1)
Sigma = tau^2*diag(params)
LogPostLogistic = function(betas, y, X, mu, Sigma) {
params = length(betas)
linPred = X%*%betas
logLik = sum(linPred*y -log(1+exp(linPred)))
if (abs(logLik) == Inf) logLik = -20001
logPrior = dmvnorm(betas, mu, Sigma, log=TRUE)
return(logLik + logPrior)
}
initVal = c(rep(0,dim(X)[2]))
OptimResults = optim(initVal,LogPostLogistic,gr=NULL,y,X,mu,Sigma,method=c("BFGS"),control=list(fnscale=-1),hessian=TRUE)
beta.tilde = OptimResults$par
inv.hessian = -solve(OptimResults$hessian)
numerical.beta = rmvnorm(10000,beta.tilde,inv.hessian) #Ser ut som skit
hist(numerical.beta)
data = read.delim("/home/krisi211/Desktop/TDDE07/Lab2/WomenWork.dat",sep="")
#data = read.delim("/home/ponsv690/Documents/TDDE07/Lab2/WomenWork.dat",sep="")
set.seed(235)
## a
glm.model = glm(Work~0 +., data = data, family = binomial)
## b
tau = 10
library("mvtnorm")
y = as.vector(data[,1])
X = as.matrix(data[,2:9])
params = dim(X)[2]
mu = matrix(0,params,1)
Sigma = tau^2*diag(params)
LogPostLogistic = function(betas, y, X, mu, Sigma) {
params = length(betas)
linPred = X%*%betas
logLik = sum(linPred*y -log(1+exp(linPred)))
if (abs(logLik) == Inf) logLik = -20001
logPrior = dmvnorm(betas, mu, Sigma, log=TRUE)
return(logLik + logPrior)
}
initVal = c(rep(0,dim(X)[2]))
OptimResults = optim(initVal,LogPostLogistic,gr=NULL,y,X,mu,Sigma,method=c("BFGS"),control=list(fnscale=-1),hessian=TRUE)
beta.tilde = OptimResults$par
inv.hessian = -solve(OptimResults$hessian)
numerical.beta = rmvnorm(10000,beta.tilde,inv.hessian) #Ser ut som skit
hist(numerical.beta)
data = read.delim("/home/krisi211/Desktop/TDDE07/Lab2/WomenWork.dat",sep="")
#data = read.delim("/home/ponsv690/Documents/TDDE07/Lab2/WomenWork.dat",sep="")
set.seed(235)
## a
glm.model = glm(Work~0 +., data = data, family = binomial)
## b
tau = 10
library("mvtnorm")
y = as.vector(data[,1])
X = as.matrix(data[,2:9])
params = dim(X)[2]
mu = matrix(0,params,1)
Sigma = tau^2*diag(params)
LogPostLogistic = function(betas, y, X, mu, Sigma) {
params = length(betas)
linPred = X%*%betas
logLik = sum(linPred*y -log(1+exp(linPred)))
if (abs(logLik) == Inf) logLik = -20001
logPrior = dmvnorm(betas, mu, Sigma, log=TRUE)
return(logLik + logPrior)
}
initVal = c(rep(0,dim(X)[2]))
OptimResults = optim(initVal,LogPostLogistic,gr=NULL,y,X,mu,Sigma,method=c("BFGS"),control=list(fnscale=-1),hessian=TRUE)
beta.tilde = OptimResults$par
inv.hessian = -solve(OptimResults$hessian)
numerical.beta = rmvnorm(10000,beta.tilde,inv.hessian) #Ser ut som skit
hist(numerical.beta)
View(numerical.beta)
hist(inv.hessian)
hist(beta.tilde)
View(X)
View(OptimResults)
glm.model
glm.model$coefficients
quantile(glm.model$coefficients)
glm.model$coefficients[1]
glm.model$coefficients[2]
glm.model$coefficients['NSmallChild']
quantile(glm.model$coefficients['NSmallChild'])
glm.model$coefficients[NSmallChild]
quantile(glm.model$coefficients['NSmallChild'],probs = c(0.025,0.975))
quantile(X['NSmallChild'],probs = c(0.025,0.975))
quantile(data['NSmallChild'],probs = c(0.025,0.975))
quantile(data$NSmallChild,probs = c(0.025,0.975))
View(data)
View(OptimResults)
View(numerical.beta)
quantile(numerical.beta[7],probs = c(0.025,0.975))
beta = rmvnorm(10000,beta.tilde,inv.hessian) #Ser ut som skit
dim(beta)
# FRÅGA!!!!!: Ska man göra såhär?
quantile(beta[,7],probs = c(0.025,0.975))
head(X)
CI = beta.tilde[7] + 1.96*(inv.hessian[7,7])^0.5
CI = beta.tilde[7] - 1.96*(inv.hessian[7,7])^0.5
CI.lo = beta.tilde[7] + 1.96*(inv.hessian[7,7])^0.5
CI.hi = beta.tilde[7] - 1.96*(inv.hessian[7,7])^0.5
quantile(beta[,7],probs = c(0.025,0.975))
hist(beta[,7])
View(beta)
View(X)
View(X)
View(data)
View(X)
head(X)
## c
new_X = c(1, 10, 8,10,1,40,1,1)
## c
new.X = c(1, 10, 8,10,1,40,1,1)
a = c(1,2,3)
b = matrix(3,3,3)
b
a
apply(b,1,a)
b*a
mul = function(row){
return(row*new.X)
}
pred = apply(beta,1,mul)
View(pred)
head(pred)
head(t(pred))
pred = t(pred)
mul = function(row){
return(new.X*row)
}
pred = apply(beta,1,mul)
head(t(pred))
head(pred)
mul = function(row){
return(t(new.X*row))
}
pred = apply(beta,1,mul)
mul = function(row){
return(t(new.X)*row)
}
pred = apply(beta,1,mul)
head(pred)
## c
new.X = c(1, 10, 8,10,1,40,1,1)
mul = function(row){
return(t(new.X)*row)
}
pred = apply(beta,1,mul)
dim(pred)
data =read.delim("/home/krisi211/Desktop/TDDE07/Lab2/TempLinkoping.txt")
set.seed(235)
## 1a
Ndraws = 10000
mu_0 = t(data.frame(-15,150,-150))
Omega_0 = 1*diag(3)
nu_0 = 40
var_0 = 1
var<-(nu_0*var_0)/rchisq(Ndraws,nu_0)
hist(var,freq = FALSE)
beta = matrix(0,Ndraws,3)
library(mvtnorm)
sim.beta = function(sigma2, mu, omega){
rmvnorm(n=1,mean=mu,sigma=sigma2*solve(omega))
}
betas = sapply(var,sim.beta,mu = mu_0, omega = Omega_0)
betas = t(betas)
reg_fun =function(betas,time){
temp = betas[1] + betas[2]*time + betas[3]*time^2
return(temp)
}
prior.temp = apply(betas[seq(1,25,1),],1,reg_fun, time = data$time)
x = dim(prior.temp)[1]
x.axis = (1:x) / x
plot(x.axis,prior.temp[,1],type = "l", xlab = "Time", ylab = "Temperature",ylim=c(-20,30))
for (i in 2:25) {
lines(x.axis,prior.temp[,i])
}
## 1b
X = cbind(rep(1,length(data$time)),data$time,data$time^2)
X.prim.X = t(X)%*%X
beta.hat = solve(t(X)%*%X)%*%t(X)%*%data$temp
mu_n = solve((t(X)%*%X + Omega_0))%*%(t(X)%*%X%*%beta.hat + Omega_0%*%mu_0)
Omega_n = X.prim.X + Omega_0
nu_n = nu_0 + dim(X)[1]
nuvar_n = nu_0%*%var_0 + (t(data$temp)%*%data$temp + t(mu_0)%*%Omega_0%*%mu_0 - t(mu_n)%*%Omega_n%*%mu_n)
var_n = as.numeric(nuvar_n/nu_n)
var.post = (nu_n*var_n)/rchisq(Ndraws,nu_n)
hist(var.post)
betas.post = sapply(var.post,sim.beta, mu = mu_n, omega = Omega_n)
betas.post = t(betas.post)
hist(betas.post[,1])
hist(betas.post[,2])
hist(betas.post[,3])
pred = apply(beta,1,mul)
data = read.delim("/home/krisi211/Desktop/TDDE07/Lab2/WomenWork.dat",sep="")
#data = read.delim("/home/ponsv690/Documents/TDDE07/Lab2/WomenWork.dat",sep="")
set.seed(235)
## a
glm.model = glm(Work~0 +., data = data, family = binomial)
## b
tau = 10
library("mvtnorm")
y = as.vector(data[,1])
X = as.matrix(data[,2:9])
params = dim(X)[2]
mu = matrix(0,params,1)
Sigma = tau^2*diag(params)
LogPostLogistic = function(betas, y, X, mu, Sigma) {
params = length(betas)
linPred = X%*%betas
logLik = sum(linPred*y -log(1+exp(linPred)))
if (abs(logLik) == Inf) logLik = -20001
logPrior = dmvnorm(betas, mu, Sigma, log=TRUE)
return(logLik + logPrior)
}
initVal = c(rep(0,dim(X)[2]))
OptimResults = optim(initVal,LogPostLogistic,gr=NULL,y,X,mu,Sigma,method=c("BFGS"),control=list(fnscale=-1),hessian=TRUE)
beta.tilde = OptimResults$par
inv.hessian = -solve(OptimResults$hessian)
beta = rmvnorm(10000,beta.tilde,inv.hessian)
quantile(beta[,7],probs = c(0.025,0.975))
CI.lo = beta.tilde[7] + 1.96*(inv.hessian[7,7])^0.5
CI.hi = beta.tilde[7] - 1.96*(inv.hessian[7,7])^0.5
## c
new.X = c(1, 10, 8,10,1,40,1,1)
mul = function(row){
return(t(new.X)*row)
}
pred = apply(beta,1,mul)
dim(prd)
dim(pred)
Pr = exp(pred)/(1+exp(pred))
head(Pr)
density(Pr)
plot(density(Pr))
dim(Pr)
?mvtnorm
library("mvtnorm")
?mvtnorm
??mvtnorm
?rmvnorm
plot(dmvnorm(Pr,beta.tilde,inv.hessian))
data = read.delim("/home/krisi211/Desktop/TDDE07/Lab2/WomenWork.dat",sep="")
#data = read.delim("/home/ponsv690/Documents/TDDE07/Lab2/WomenWork.dat",sep="")
set.seed(235)
## a
glm.model = glm(Work~0 +., data = data, family = binomial)
## b
tau = 10
library("mvtnorm")
y = as.vector(data[,1])
X = as.matrix(data[,2:9])
params = dim(X)[2]
mu = matrix(0,params,1)
Sigma = tau^2*diag(params)
LogPostLogistic = function(betas, y, X, mu, Sigma) {
params = length(betas)
linPred = X%*%betas
logLik = sum(linPred*y -log(1+exp(linPred)))
if (abs(logLik) == Inf) logLik = -20001
logPrior = dmvnorm(betas, mu, Sigma, log=TRUE)
return(logLik + logPrior)
}
initVal = c(rep(0,dim(X)[2]))
OptimResults = optim(initVal,LogPostLogistic,gr=NULL,y,X,mu,Sigma,method=c("BFGS"),control=list(fnscale=-1),hessian=TRUE)
beta.tilde = OptimResults$par
inv.hessian = -solve(OptimResults$hessian)
beta = rmvnorm(10000,beta.tilde,inv.hessian)
quantile(beta[,7],probs = c(0.025,0.975))
CI.lo = beta.tilde[7] + 1.96*(inv.hessian[7,7])^0.5
CI.hi = beta.tilde[7] - 1.96*(inv.hessian[7,7])^0.5
## c
new.X = c(1, 10, 8,10,1,40,1,1)
mul = function(row){
return(t(new.X)*row)
}
pred = apply(beta,1,mul)
Pr = exp(pred)/(1+exp(pred))
plot(dmvnorm(Pr,beta.tilde,inv.hessian))
test = dmvnorm(Pr,beta.tilde,inv.hessian)
plot(dmvnorm(Pr,as.vector(beta.tilde),inv.hessian))
beta.tilde
inv.hessian
?Vectorize
beta = rmvnorm(10000,beta.tilde,inv.hessian)
?dmvnorm
plot(dmvnorm(t(Pr),beta.tilde,inv.hessian))
hist(dmvnorm(t(Pr),beta.tilde,inv.hessian))
plot
plot(dmvnorm(t(Pr),beta.tilde,inv.hessian))
?dmvnorm
hist(Pr)
data = read.delim("/home/krisi211/Desktop/TDDE07/Lab2/WomenWork.dat",sep="")
#data = read.delim("/home/ponsv690/Documents/TDDE07/Lab2/WomenWork.dat",sep="")
set.seed(235)
## a
glm.model = glm(Work~0 +., data = data, family = binomial)
## b
tau = 10
library("mvtnorm")
y = as.vector(data[,1])
X = as.matrix(data[,2:9])
params = dim(X)[2]
mu = matrix(0,params,1)
Sigma = tau^2*diag(params)
LogPostLogistic = function(betas, y, X, mu, Sigma) {
params = length(betas)
linPred = X%*%betas
logLik = sum(linPred*y -log(1+exp(linPred)))
if (abs(logLik) == Inf) logLik = -20001
logPrior = dmvnorm(betas, mu, Sigma, log=TRUE)
return(logLik + logPrior)
}
initVal = c(rep(0,dim(X)[2]))
OptimResults = optim(initVal,LogPostLogistic,gr=NULL,y,X,mu,Sigma,method=c("BFGS"),control=list(fnscale=-1),hessian=TRUE)
beta.tilde = OptimResults$par
inv.hessian = -solve(OptimResults$hessian)
beta = rmvnorm(10000,beta.tilde,inv.hessian)
quantile(beta[,7],probs = c(0.025,0.975))
CI.lo = beta.tilde[7] + 1.96*(inv.hessian[7,7])^0.5
CI.hi = beta.tilde[7] - 1.96*(inv.hessian[7,7])^0.5
## c
new.X = c(1, 10, 8,10,1,40,1,1)
mul = function(row){
return(t(new.X)*row)
}
pred = apply(beta,1,mul)
Pr = exp(pred)/(1+exp(pred))
hist(Pr)
hist(t(Pr))
head(X)
?apply
m = matrix(1,8,8)
m
res = apply(m,1,mul)
res
res = apply(m,2,mul)
res
res = apply(m,1,mul)
res
res = apply(m,2,mul)
res
m
res = apply(m,2,mul)
res
t(res)
new.X = c(1, 10, 8,10,1,40,1,1)
mul = function(row){
return(new.X*row)
}
pred = apply(beta,1,mul)
Pr = exp(t(pred))/(1+exp(t(pred)))
hist(Pr)
m
res = apply(m,2,mul)
res
res = apply(m,1,mul)
res
new.X
new.X*new.X
t(new.X)*new.X
t(new.X)%*%new.X
new.X%*%new.X
## c
new.X = c(1, 10, 8,10,1,40,1,1)
mul = function(row){
return(new.X%*%row)
}
pred = apply(beta,1,mul)
Pr = exp(t(pred))/(1+exp(t(pred)))
hist(Pr)
Pr = exp(pred)/(1+exp(pred))
mul = function(row){
return(t(new.X)%*%row)
}
pred = apply(beta,1,mul)
Pr = exp(pred)/(1+exp(pred))
hist(Pr)
